#include <stdio.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <fcntl.h>
#include <unistd.h>

#include "test.h"
#include "testlib.h"
#include "TaskManage.h"
#include "snow.h"

#define  MAX_SEND_LEN   200
#define SPI_BRAM_BASE_OFFSET  40
#ifdef FPAG_APP_DEBUG
#define FDEBUG(fmt, args...)	printf("APP: " fmt "\n", ##args)
#else
#define FDEBUG(fmt, args...)
#endif
#define FERR(fmt, args...)		printf("APP[ERR]: " fmt "\n", ##args)
//char *dev_file1 = "/dev/fpga_device";
char uploadDI[MAX_SEND_LEN]={0x00,0x00,0x12,0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
//lily
char snow_geshi[37]={0x00,0x00,0x12,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//geshi huihe event
char snow_duanA[39]={0x00,0x00,0x12,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x27,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//duanbo_A event
char snow_hong1A[43]={0x00,0x00,0x12,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x2B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//hongwai_1A event
char snow_zijiao[35]={0x00,0x00,0x12,0x43,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//zijiao event
char snow_k_qingqiu[34]={0x00,0x00,0x12,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//k_qingqiu event
char snow_duanB[39]={0x00,0x00,0x12,0x45,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x27,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//duanbo_B event
char snow_hong1B[43]={0x00,0x00,0x12,0x46,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x2B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//hongwai_1B event
char snow_hong2A[43]={0x00,0x00,0x12,0x47,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x2B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//hongwai_2A event
char snow_hong2B[43]={0x00,0x00,0x12,0x48,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x2B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//hongwai_2B event
char snow_kejian1[109]={0x00,0x00,0x12,0x49,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x6D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//kejian_1 event
char snow_kejian2[109]={0x00,0x00,0x12,0x4A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x6D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//kejian_2 event
char snow_kejian3[109]={0x00,0x00,0x12,0x4B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x6D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//kejian_3 event
char snow_fuzhu[306]={0x00,0x00,0x12,0x4C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x01,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//fuzhushuju_k event

char snow_d_zijiao[35]={0x00,0x00,0x12,0x4D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//zijiao_d event
char snow_sulv[37]={0x00,0x00,0x12,0x4F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x25,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//zhensulv event
char snow_d_qingqiu[34]={0x00,0x00,0x12,0x50,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//d_qingqiu event
char snow_dianlu[35]={0x00,0x00,0x12,0x51,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//gongneng dianlu event
char snow_canshu[50]={0x00,0x00,0x12,0x52,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//canshu shezhi event
char snow_d_fuzhu[104]={0x00,0x00,0x12,0x4C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x68,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};//fuzhushuju_d event


int snow_k[320];
int snow_d[320];
int back_flag_geshi=0;
int back_flag_duanA=0;
int back_flag_duanB=0;
int back_flag_hong1A=0;
int back_flag_hong1B=0;
int back_flag_hong2A=0;
int back_flag_hong2B=0;
int back_flag_kejian1=0;
int back_flag_kejian2=0;
int back_flag_kejian3=0;
int back_flag_zijiao=0;
int back_flag_k_fuzhu=0;
int back_flag_k_qingqiu=0;

int back_flag_d_zijiao=0;
int back_flag_sulv=0;
int back_flag_d_qingqiu=0;
int back_flag_dianlu=0;
int back_flag_canshu=0;
int back_flag_d_fuzhu=0;
//lily
unsigned char  unhandledTTs_1;
static int count;

unsigned long diDataBuf[DI_BUF_SIZE];
unsigned short diBramPos;
unsigned short diBufWP;						// write position of DI BUF
unsigned short diBufRP;						// read position of DI BUF
unsigned short diDatalen;	// how many data in diDataBuf. after write, +1. after read, -1
extern int fd ;

int	unReceivedDI;
GK_OPCUA_TASK DIRECT_TRIGGER_TASK, DIRECT_SETPARA_TASK;
unsigned long gpioPulseEN;
extern unsigned char hasDirectTask;
extern unsigned short fdev_rword(int fd, unsigned int addr);
extern int fdev_wword(int fd, unsigned int addr, unsigned short dat);
void initDI()
{
	diBufWP = 0;
	diBufRP = 0;
	diBramPos = 0;
	diDatalen = 0;
	unReceivedDI = 0;
}

void *Task_thread()
{
	initDI();
	gpioPulseEN = 0;

	while ( 1 )
	{
         	usleep(5000);

		if ( hasDirectTask != 0xAA )
		{
			usleep(1000);		//10MS
			continue;
		}
		else	
		{
			printf("this is distributeTask!\n");			
			distributeTask( GK_OPCUA_DIRECT_TASK, &DIRECT_SETPARA_TASK );
			distributeTask( GK_OPCUA_DIRECT_TASK, &DIRECT_TRIGGER_TASK );
			hasDirectTask = 0;
			
		}
					
	}

}
	
int upDI()
{
	
	int i=0,j;
	 int k=0;
        int array[8];
	static int num = 0;
	i=0;
        array[i]=fdev_rword(fd, 0x0904);
        if(array[0]!=0){
           	for(i=1;i<8;i++)
           	{
           	 	array[i]=fdev_rword(fd, 0x0904);
	   	}
	 	
	       for(i=0;i<8;i++) 
	       {
                     uploadDI[43-k]=(char)array[i];
		     uploadDI[43-k-1]=(char)(array[i] >> 8);
		     printf("uploadDI[%d]=0x%4x  uploadDI[%d]=0x%4x",43-k,uploadDI[43-k],43-k-1,uploadDI[43-k-1]);
		     k += 2;
 		     printf("\n");
               }
               printf("\n");
		num ++;
        
       }
       else {
             	return -1;
      	    }    
      return 0;
        
    
       usleep(1);
            	
}

int snow_back_k()
{
	
	if(unhandledTTs_1>0)
	{
		
		printf("snowlily!\n");

		int i=0,length=0,j=0,k=0,num=0;
		char snow_buffer[630];
		char frist,second,channel;

		while(1)
		{
			snow_k[i]=fdev_rword(fd, 0x0f04);
			frist=(char)snow_k[i];
			second=(char)(snow_k[i]>>8);

			if((frist!=238)&&(second!=238))
			{
				snow_buffer[j]=frist;
				snow_buffer[j+1]=second;
				j=j+2;
			}
			else
			{
				printf("the end!\n");
				break;
			}
			
			i++;
			
//			printf("%x,%x\n",frist,second);

		}

		num=j;
       		i=0;

		while(i<num)
		{
			length=(int)(snow_buffer[i+2]<<8)+(int)snow_buffer[i+3];
			length=length+5;

			//printf("%d\n",length);
			
			channel=snow_buffer[i+4];
			
			switch(channel)
			{
				case BICC_GESHI:
				{
					for(k=0;k<length;k++)
						snow_geshi[28+k]=snow_buffer[i+k];
					back_flag_geshi=1;
					printf("0X33\n");
					break;
				}
				case BICC_DUAN_A:
				{
					for(k=0;k<length;k++)
						snow_duanA[28+k]=snow_buffer[i+k];
					back_flag_duanA=1;
					printf("0X36\n");
					break;
				}
				case BICC_DUAN_B:
				{
					for(k=0;k<length;k++)
						snow_duanB[28+k]=snow_buffer[i+k];
					back_flag_duanB=1;
					printf("0X39\n");
					break;
				}
				case BICC_HONGWAI_1A:
				{
					for(k=0;k<length;k++)
						snow_hong1A[28+k]=snow_buffer[i+k];
					back_flag_hong1A=1;
					printf("0X3c\n");
					break;
				}
				case BICC_HONGWAI_1B:
				{
					for(k=0;k<length;k++)
						snow_hong1B[28+k]=snow_buffer[i+k];
					back_flag_hong1B=1;
					printf("0X3F\n");
					break;
				}
				case BICC_HONGWAI_2A:
				{
					for(k=0;k<length;k++)
						snow_hong2A[28+k]=snow_buffer[i+k];
					back_flag_hong2A=1;
					printf("0X40\n");
					break;
				}
				case BICC_HONGWAI_2B:
				{
					for(k=0;k<length;k++)
						snow_hong2B[28+k]=snow_buffer[i+k];
					back_flag_hong2B=1;
					printf("0X43\n");
					break;
				}
				case BICC_KEJIAN_1:
				{
					for(k=0;k<length;k++)
						snow_kejian1[28+k]=snow_buffer[i+k];
					back_flag_kejian1=1;
					printf("0X4F\n");
					break;
				}
				case BICC_KEJIAN_2:
				{
					for(k=0;k<length;k++)
						snow_kejian2[28+k]=snow_buffer[i+k];
					back_flag_kejian2=1;
					printf("0X56\n");
					break;
				}
				case BICC_KEJIAN_3:
				{
					for(k=0;k<length;k++)
						snow_kejian3[28+k]=snow_buffer[i+k];
					back_flag_kejian3=1;
					printf("0X5F\n");
					break;
				}
				case BICC_ZIJIAO:
				{
					for(k=0;k<length;k++)
						snow_zijiao[28+k]=snow_buffer[i+k];
					back_flag_zijiao=1;
					printf("0X66\n");
					break;
				}
				case BICC_K_FUZHU:
				{
					for(k=0;k<length;k++)
						snow_fuzhu[28+k]=snow_buffer[i+k];
					back_flag_k_fuzhu=1;
					printf("0X6C\n");
					break;
				}
				case BICC_K_QINGQIU:
				{
					for(k=0;k<length;k++)
						snow_k_qingqiu[28+k]=snow_buffer[i+k];
					back_flag_k_qingqiu=1;
					printf("0X6f\n");
					break;
				}
				default:
				{
					printf("wrong data!\n");			
					break;
				}
				
			}
			i=i+length;	
		}

		
		unhandledTTs_1=0;	
	}
	
}

int snow_back_d()
{
	
	if(unhandledTTs_1>0)
	{
		
		printf("snowlily!\n");

		int i=0,length=0,j=0,k=0,num=0;
		char snow_buffer[630];
		char frist,second,channel;

		while(1)
		{
			snow_d[i]=fdev_rword(fd, 0x0f04);
			frist=(char)snow_d[i];
			second=(char)(snow_d[i]>>8);

			if((frist!=238)&&(second!=238))
			{
				snow_buffer[j]=frist;
				snow_buffer[j+1]=second;
				j=j+2;
			}
			else
			{
				printf("the end!\n");
				break;
			}
			
			i++;
			
			printf("%x,%x\n",frist,second);

		}

		num=j;
       		i=0;

		while(i<num)
		{
			length=(int)(snow_buffer[i+2]<<8)+(int)snow_buffer[i+3];
			length=length+5;

			//printf("%d\n",length);
			
			channel=snow_buffer[i+4];
			
			switch(channel)
			{
				case BICC_D_CANSHU:
				{
					for(k=0;k<length;k++)
						snow_canshu[28+k]=snow_buffer[i+k];
					back_flag_canshu=1;
					printf("0X46\n");
					break;
				}
				case BICC_D_ZHENSULV:
				{
					for(k=0;k<length;k++)
						snow_sulv[28+k]=snow_buffer[i+k];
					back_flag_sulv=1;
					printf("0X33\n");
					break;
				}
				case BICC_D_DIANLU:
				{
					for(k=0;k<length;k++)
						snow_dianlu[28+k]=snow_buffer[i+k];
					back_flag_dianlu=1;
					printf("0X2f\n");
					break;
				}
				case BICC_D_FUZHU:
				{
					for(k=0;k<length;k++)
						snow_d_fuzhu[28+k]=snow_buffer[i+k];
					back_flag_d_fuzhu=1;
					printf("0X6c\n");
					break;
				}
				case BICC_D_QINGQIU:
				{
					for(k=0;k<length;k++)
						snow_d_qingqiu[28+k]=snow_buffer[i+k];
					back_flag_d_qingqiu=1;
					printf("0X70\n");
					break;
				}
				case BICC_ZIJIAO:
				{
					for(k=0;k<length;k++)
						snow_d_zijiao[28+k]=snow_buffer[i+k];
					back_flag_d_zijiao=1;
					printf("0X66\n");
					break;
				}
				default:
				{
					printf("wrong data!\n");			
					break;
				}
				
			}
			i=i+length;	
		}

		
		unhandledTTs_1=0;	
	}
	
}

