
#include "xuartns550.h"

/*************************编码器数据定义***************************************/
struct _VNIR{
	float k;						
	float step;					
	int step_num_f;			
	int step_num_b;		
	int step_num;
	int coder;				
}vnir;
struct _PAN{
	float k;						
	float step;					
	int step_num_f;			
	int step_num_b;	
	int step_num;	
	int coder;					
}pan;	
/******************************************************************************/
/*************************控制信息数据定义*************************************/
 struct _CoderInitMSG{
	float 			VnirStepValue;    
	float 				VnirStepCtrlValue;
	unsigned  int  VnirCoderValue;   
	float 			PanStepValue;     
   float				PanStepCtrlValue; 
	unsigned  int  PanCoderValue;    
}InitMsg;
/******************************************************************************/
 struct _SwirCtrlMSG{	  
	unsigned char mode;	
	unsigned char SameCtrlEnable;		
	unsigned char FaultTimes0;		  
	unsigned char FaultTimes1;		  
	unsigned char FaultTimes2;		  
	unsigned char FaultTimes3;		  
	
}SwirCtrlMsg;
/******************************************************************************/
 struct _VnirCtrlMSG{	  
	unsigned char mode;				  
	unsigned  int SameCtrlEnable;			 
	unsigned char FaultTimes0;		  
	unsigned char FaultTimes1;		 
	unsigned char FaultTimes2;		 
	unsigned char FaultTimes3;		 
	
}VnirCtrlMsg;
/******************************************************************************/
 struct _CoderCtrlMSG {
	unsigned char DeviceID;		  
	unsigned char mode;				  
	unsigned  int length;			  
	struct _CoderInitMSG InitMsg;		     
	unsigned char FaultTimes;	
	unsigned char SameCtrlEnable;			  
}CoderCtrlMsg;
/******************************************************************************/
int command_status;
unsigned int command_len = 10;
//unsigned int CoderFaultPosition = 24;
unsigned int CoderCommunicationCount = 0;
unsigned int SwirFaultPosition0 = 4;
unsigned int SwirFaultPosition1 = 25;
unsigned int SwirFaultPosition2 = 46;
unsigned int SwirFaultPosition3 = 67;
unsigned int SwirCommunicationCount0 =0;
unsigned int SwirCommunicationCount1 =0;
unsigned int SwirCommunicationCount2 =0;
unsigned int SwirCommunicationCount3 =0;

unsigned int VnirFaultPosition0 = 4;
unsigned int VnirFaultPosition1 = 25;
unsigned int VnirFaultPosition2 = 46;
unsigned int VnirFaultPosition3 = 67;
unsigned int VnirCommunicationCount0 =0;
unsigned int VnirCommunicationCount1 =0;
unsigned int VnirCommunicationCount2 =0;


/****************************控制信息存储区定义*********************************/
/*#define TestManageCtrlMsgBufferSize 64
#define SwirTestCtrlMsgBufferSize 88
#define VnirTestCtrlMsgBufferSize 88*/
/*unsigned char SwirTestCtrlMsgBuffer[SwirTestCtrlMsgBufferSize]={
				  0x01,0x00,0x1F,0x02,0x01,0x06,0x03,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x01,0x06,0x03,0x06,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x01,0x06,
				  0x03,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x02,0x01,0x07,0x03,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00
};*/
/*unsigned char VnirTestCtrlMsgBuffer[VnirTestCtrlMsgBufferSize]={
				  0x02,0x00,0x1F,0x02,0x01,0x06,0x03,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x01,0x06,0x03,0x06,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x01,0x06,
				  0x03,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x02,0x01,0x07,0x03,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
				  0x00,0x00,0x00,0x00,0x00,0x00,0x00
};*/
/******************************************************************************/
unsigned char coder_value[6]={0,0,0,0,0,0};
unsigned char coder_value12[12]={0};
unsigned char CoderValue[7]={0};
unsigned int data_package[10]={0,0,0,0,0,0,0,0,0,0};
unsigned char command_checkword[2]={0,0};
unsigned char SwirParametersDefaultValue[27]={
                                  0xE9,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0F,
                                  0x10,0x00,0x00,0x11,0x00,0x00,0x12,0x13,0x14,0x00,0x00 
											 };
unsigned char SwirParametersPhysicsBorderValue1[27]={
                                  0xE9,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,
											 0xFF,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0xFF,0x00,0x00
											 };
unsigned char SwirParametersPhysicsBorderValue2[27]={
                                  0xE9,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,0x00,0xFF,
											 0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xFF,0x00,0xFF,0x00
											 };
unsigned char SwirParametersAllZero[27]={
                                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
											 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
											 };
unsigned char SwirParametersAllF[27]={
                                  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
											 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0XFF,0xFF
											 };											 
unsigned char VnirParametersDefaultValue[50]={
                                  0x67,0x00,0x01,0x00,0x02,0x00,0x03,0x00,0x04,0x00,0x05,0x00,0x06,0x00,0x07,0x08,
                                  0x00,0x09,0x00,0x0A,0x00,0x0B,0x00,0x0C,0x00,0x0D,0x0E,0x0F,0x00,0x10,0x01,0x00,
                                  0x11,0x12,0x00,0x13,0x00,0x14,0x00,0x15,0x00,0x16,0x00,0x17,0x18,0x19,0x00,0x00,
                                  0x1A,0x00
											 };
unsigned char VnirParametersPhysicsBorderValue1[50]={
                                  0x67,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,
											 0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0x00,0xFF,0xFF,0x00,0xFF,
											 0xFF,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0xFF,0x00,0x00,
											 0x00,0x00
											 };
unsigned char VnirParametersPhysicsBorderValue2[50]={
                                  0x67,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,
											 0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0xFF,0x00,0x00,0xFF,0x00,
											 0x00,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0x00,0xFF,0xFF,
											 0xFF,0x00 
											 };
unsigned char VnirParametersAllZero[50]={
                                  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
											 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
											 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
											 0x00,0x00 
												};
unsigned char VnirParametersAllF[50]={
                                  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
											 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
											 0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
											 0xFF,0xFF 
												};											
unsigned char FaultBytes[300]={0};
/******************************************************************************/


/******************************************************************************/
XStatus UartLiteCommunication(Xuint16 DeviceId);
XStatus SetupInterruptSystem(XUartNs550 *UartLitePtr);
void SendHandler(void *CallBackRef, unsigned int EventData);
void RecvHandler(void *CallBackRef, u32 Event, unsigned int EventData);
//void RecvHandler(void);
void XUartBufferInitial(void);
void Init_Data();
void Step_Calculate();
void VnirCoder_Calculate();
void PanCoder_Calculate();
void print_float(float input);
void CoderValue_Pack();
void UartCommand_Response(void);
void CheckWord_Response(unsigned char addr,unsigned int len,unsigned int times);
void ResponseDelayInProcess(unsigned int len,unsigned char buffer[]);
void Parameters_Response(unsigned int len,unsigned char buffer[]);
void Parameters_ResponseCheckwordError(unsigned int len,unsigned char buffer[],unsigned char type);
//void CoderFaultType(unsigned char type);
void SwirFaultType(unsigned char type);
void VnirFaultType(unsigned char type);
void CoderCtrlMsgInit( void );
void SwirCtrlMsgInit( void );
void VnirCtrlMsgInit( void );
void CommandHeaderInit( void );
float CtrlMsg_PreHandle(unsigned char A,unsigned char B,unsigned char C,unsigned char D);
void CoderDataPackageOverLong( void );
#define CombineTwoBytes(A, B) (((A&0xFF)<<8)+(B&0xFF))
#define CombineFourBytes(A,B,C,D)  (((CombineTwoBytes(A, B)&0xFFFF)<<16)+((CombineTwoBytes(C, D))&0xFFFF))
void CoderUartResponse( void );
void SwirUartResponse( void );
void VnirUartResponse( void );
void FaultBytesInit( void );
void CoderCtrlMsgInitDefault(void);
void SwirCtrlMsgInit(void);
void VnirCtrlMsgInit(void);
int GetCurrentTime();
void CoderFaultType(unsigned char type,unsigned char para);
/******************************************************************************/






